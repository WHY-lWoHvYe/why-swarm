server:
  port: 8081
  http2:
    enabled: true
  undertow:
    threads:
      io: 6
      worker: 48
    buffer-size: 1024
    direct-buffers: true

  #  server.http2.enabled=true
  # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
  # 不要设置过大，如果过大，启动项目会报错：打开文件数过多
  #  server.undertow.threads.io= 6
  # 阻塞任务线程池, 当执行类似servlet请求阻塞IO操作, undertow会从这个线程池中取得线程
  # 它的值设置取决于系统线程执行任务的阻塞系数，默认值是IO线程数*8
  #  server.undertow.threads.worker= 48
  # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
  # 每块buffer的空间大小,越小的空间被利用越充分，不要设置太大，以免影响其他应用，合适即可
  #server.undertow.buffer-size= 1024
  # 每个区分配的buffer数量 , 所以pool的大小是buffer-size * buffers-per-region
  #server.undertow.buffers-per-region= 1024
  # 是否分配的直接内存(NIO直接分配的堆外内存)
  #  server.undertow.direct-buffers= true

spring:
  application:
    name: why-system
  freemarker:
    check-template-location: false
  profiles:
    active: dev
  jackson:
    time-zone: GMT+8
  data:
    redis:
      repositories:
        enabled: false

  #配置 Jpa
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
        enable_lazy_no_trans: true
    #        指定表名解析。spring下可不加。会自动使用
    #        naming:
    #          physical-strategy: com.lwohvye.config.common.ServerAwareNamingStrategy
    open-in-view: true
    hibernate:
      ddl-auto: none

  # 参考：https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.6-Release-Notes#pathpattern-based-path-matching-strategy-for-spring-mvc
  # The default strategy for matching request paths against registered Spring MVC handler mappings has changed from AntPathMatcher to PathPatternParser
#  mvc:
#    pathmatch:
#      matching-strategy: ant_path_matcher

#  # 全局懒加载。
#  main:
#    lazy-initialization: true
  cloud:
    nacos:
      discovery:
        server-addr: http://10.211.55.140:8848
      config:
        server-addr: http://10.211.55.140:8848
        file-extension: yaml

task:
  pool:
    # 核心线程池大小
    core-pool-size: 10
    # 最大线程数
    max-pool-size: 30
    # 活跃时间
    keep-alive-seconds: 60
    # 队列容量
    queue-capacity: 50
    # 关闭时，等待所有任务完成再销毁
    wait-for-tasks-to-complete: true
    # 最大等待时间
    await-termination-seconds: 60

#密码加密传输，前端公钥加密，后端私钥解密
rsa:
  private_key: MIIEugIBADANBgkqhkiG9w0BAQEFAASCBKQwggSgAgEAAoIBAQC0puTIfyD5bzz7MJqqfn424Qz2OhWGck/9gDpf3ZFZ4CMRc9TUMafeMJUSeziuRJBSvJ8Ru1SE0CjAgGasm6DDm0Ad8ryd8pWwMu0HFyo0R++D2+5G75/e6h7+UG5r28XmUVgmpbP6cgyrnUlR4EQiimuWV7Jr4oHQ2LqG59UnOfMxTE+pSMgMqXTMtTJXOkTKd9vAEDyAmD9jIDTPJGfOX4470pPgX+RPJpxls0k7PVrh9xMhxXGS/8nWu3kENSweLNBrnzLbNXD2bzRYq7lvuTgymMhCKTTy9JqflLmI3s/2wxN3G8CkBpn3xm6Tw7EHlA4XY3HHVQGovvuXpE2HAgMBAAECggEAAmgKuiT/YnM547q1BLpkogSDcLA7YywYpq7TmD1SV1kl/nCFkEINE2egRLvBeIjPR1rd35WYPaCsOkw7kecM0C48P2nhW1VE6zDyeVq0pDelGCOQ2/8LKSQDP64Amo016KiCvRkN+bMVOiABPwb2wWMIpdsLNGazBf4tFej2rOwR5YTxBjRUsb55ID/SRSCpPT/1QAlGIv+UjX+jecIJqygkEXcCzClePN+sGBkOyBftZ7qlBrsU/FSeWb+McT2sqKBDA5tQNy0Q631MPAsGMKBYAcY52fmZcaVcmN21DnvIRinShSrO6+JeTbAeOSc4Hxnty4mqKti2i1v0Ua3XwQKBgQD7gfkhRr3Yt5JUbuUSOpTuDqsQmri7SFQ/dYfBHgHXGuZG1lNAF6VMaPkbgzjAoLx9SWvAzsoS+VsLPEpbzBYlFFS0fab0T50TOVEWwdnROCo8CGjPTgf9g8WGw6QN1IeHUr443Ae+2D9vx/BxsmZekAydi27Hy1PD5HcEDOoEJwKBgQC34O4li34P3DnEXrVJxGZ6PfECRukx9vSpsSGyVFHyABDRoQCR5pdJiF3l08WjiZSo6cHvr1JAkYx/vfQjJVHJqa8pKfz9AkaGCw5ciUFFRvGfLCv6EVJbuW5YtENjN8KuaVekEN1wJSG4r5DPDhnLxmV0ONVfpPJ27Xtg7FRnoQJ/TKFNRtZHAcDs1Mz0/pjax62wcV6y6l0fTjaBJlX+OYv4nZyvwNdzhdR2EevpXseappG4Qwa+iwlus/2qqk2EccfABz5BoC6hrTnJeyWVOCnktGXbiU49IQEFLgpt8cjPgmuziZ+AvKUmrug8WmgAyM8bCOVy220YGJeDq7hDlQKBgE3DbnOqXpHOjQ+jDgA4cy5Xa8mOu6hJzIbHRnzodA9oP7Sn5lnNr0WFylAcE4Vp9djJox7+gkaUR1rutoT2j3Q9srox67AEelbN7jDsSxJFQoISaDbFhJMOBMC225jmSAsCufHEwCFhUrWMai1mxToMmXNhZbuhQnlRTdBbogaBAoGAae8hgwu4VgIrEBHvkhVsBDK2wib6JjbrTbWZh8LwMOUdTZEUNfHaXyXjkpDmJ/HkDQ8IgmOn4ZXSIv9kqr+BAepC+lhOE8m6FbE0vFXeW2izFcWLXH3d4GTL8QCKAgZdWd/iF2cBt/puJgy+B6Ym4izwre3qSG+DhqpoQ3ogtis=
  public_key: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtKbkyH8g+W88+zCaqn5+NuEM9joVhnJP/YA6X92RWeAjEXPU1DGn3jCVEns4rkSQUryfEbtUhNAowIBmrJugw5tAHfK8nfKVsDLtBxcqNEfvg9vuRu+f3uoe/lBua9vF5lFYJqWz+nIMq51JUeBEIoprlleya+KB0Ni6hufVJznzMUxPqUjIDKl0zLUyVzpEynfbwBA8gJg/YyA0zyRnzl+OO9KT4F/kTyacZbNJOz1a4fcTIcVxkv/J1rt5BDUsHizQa58y2zVw9m80WKu5b7k4MpjIQik08vSan5S5iN7P9sMTdxvApAaZ98Zuk8OxB5QOF2Nxx1UBqL77l6RNhwIDAQAB
#
logging:
  config: classpath:logback-spring.xml

#  系统名称。各实例存在差异的部分，放到源文件中好一些，dev/prod文件最好存各实例通用的。走配置中心时，印象中与该文件中相同的配置部分会被覆盖，所以可以把个性化的配置放到实例内
local:
  sys:
    name: X0X
    # 一个开关，标识是否加载相关但类
    load-os: true
    # 使用多个策略配置。默认false
    multi-security: false
    # 关闭权限验证，默认false
    unauth: true
    # 表名映射
    table-name:
      user: sys_user
    # 相同服务的各实例会有不同的配置，从而使得一些事件能被各实例都消费一次，理论上有更好地解决方案
    sp-sync-queue: xs.sp-sync.queue
